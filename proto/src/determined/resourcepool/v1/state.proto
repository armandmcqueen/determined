syntax = "proto3";

package determined.resourcepool.v1;
option go_package = "github.com/determined-ai/determined/proto/pkg/resourcepoolv1";

import "protoc-gen-swagger/options/annotations.proto";


// The state of the ResourcePool, which is the resources available (agents, slots, cpu container
// capacity) and the amount of resource used.
message ResourcePoolState {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema: {required: [
      "name",
      "num_agents",
      "num_total_slots",
      "num_active_slots",
      "max_cpu_containers",
      "num_active_cpu_containers"
    ] }
  };
  // The name of the resource pool.
  string name = 1;
  // The number of agents that exist in the pool.
  int32 num_agents = 2;
  // The total number of slots available in the pool (both unused and in-use).
  int32 num_total_slots = 3;
  // The number of slots current being used by tasks in the pool.
  int32 num_active_slots = 4;
  // The maximum number of CPU containers that can run in the pool.
  int32 max_cpu_containers = 5;
  // The number of CPU containers currently running in the pool.
  int32 num_active_cpu_containers = 6;
}

// ResourcePoolStates is a collection of ResourcePoolState, one for each pool. After the initial
// state is sent, only pools whose state has changed will be included in ResourcePoolStates.
message ResourcePoolStates {
  // The collection of ResourcePoolState, one for each pool.
  repeated ResourcePoolState resource_pools = 1;
}

